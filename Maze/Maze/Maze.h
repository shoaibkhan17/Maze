#include <iostream>
#include <cstdlib>
#include <string>
#include <windows.h>
#include <conio.h>
#include <string>
#include "Hero.h"
#include "Monster.h"
#include "Utility.h"
#include "Item.h"

using namespace std;

#pragma once
class Maze
{
public:
	Maze();
	~Maze();

	//Public functions
	void transferArray(int[22][22]);		//Transfers array depending on the game type selected by the user.
	void setSize(int);			//Sets the constant array size that holds the maze structure.
	void displayMaze();			//Displays the maze.
	void displayHUD();			//Displays the HUD.
	void displayMonsterHP(Monster *);		//Displays the monster's HP.
	string displayPieces(int, int);			//Returns the string to the display mazze funtion to be displayed.

	//Public variables
	Hero myHero;			//An object of type hero.
	Monster myMonster;		//An object of type monster till lucifer.
	Monster *zombie;
	Monster *vampire;
	Monster *warewolf;
	Monster *demon;
	Monster *bigfoot;
	Monster *lucifer;
	Item *sword;		//An object of type item till key.
	Item *healthPotion;
	Item *door;
	Item *key;

	int mazeBoard[22][22];

	//######################################## MAIN GAME ########################################
	int manualGame[22][22] = 
	{ { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },				//0 = empty space, 1 = wall, 2 = start, 3 = finish, 4 = hero, 5 = Zombie
	{ 1,12,0,0,0,0,0,0,0,1,2,4,1,0,1,0,0,1,0,5,1,1 },				//6 = Vampire, 7 = Warewolf, 8 = Demon, 9 = Bigfoot, 10 - Lucifer, 11 - Health, 12 - sword
	{ 1,0,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,1,1,0,1,1 },				//13 - door, 14 - key
	{ 1,0,0,6,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,14,1 },
	{ 1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,0,1,1 },
	{ 1,0,1,1,0,1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1 },
	{ 1,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,0,1 },
	{ 1,0,0,0,1,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,1,1 },
	{ 1,1,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1 },
	{ 1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1 },
	{ 1,0,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1 },
	{ 1,0,0,0,0,1,1,0,0,0,9,1,0,0,0,1,1,1,1,1,1,1 },
	{ 1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,0,0,0,1 },
	{ 1,0,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,1,0,1 },
	{ 1,1,7,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1 },
	{ 1,1,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1 },
	{ 1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1 },
	{ 1,1,1,0,0,1,1,1,1,0,0,1,0,1,0,10,0,1,0,1,1,1 },
	{ 1,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1,13,1,13,0,0,1 },
	{ 1,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,0,1,0,1,0,1 },
	{ 1,11,1,1,1,1,0,1,1,1,1,0,0,1,1,1,3,0,8,1,1,1 },
	{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 }, };

	//######################################## AUTO GAME WITH MONSTERS ########################################
	int autoGame2[22][22] =
	{ { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },				
	{ 1,12,0,0,0,0,0,0,0,1,2,4,1,0,1,0,0,1,0,5,1,1 },				
	{ 1,0,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,1,1,0,1,1 },				
	{ 1,0,0,6,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1 },
	{ 1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,0,1,1 },
	{ 1,0,1,1,0,1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1 },
	{ 1,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,0,1 },
	{ 1,0,0,0,1,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,1,1 },
	{ 1,1,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1 },
	{ 1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1 },
	{ 1,0,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1 },
	{ 1,0,0,0,0,1,1,0,0,0,9,1,0,0,0,1,1,1,1,1,1,1 },
	{ 1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,0,0,0,1 },
	{ 1,0,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,1,0,1 },
	{ 1,1,7,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1 },
	{ 1,1,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1 },
	{ 1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1 },
	{ 1,1,1,0,0,1,1,1,1,0,0,1,0,1,0,10,0,1,0,1,1,1 },
	{ 1,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,1 },
	{ 1,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,0,1,0,1,0,1 },
	{ 1,11,1,1,1,1,0,1,1,1,1,0,0,1,1,1,3,0,8,1,1,1 },
	{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 }, };

	//######################################## AUTO GAME WITHOUT MONSTERS ########################################
	int autoGame1[22][22] =
	{ { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },				
	{ 1,0,0,0,0,0,0,0,0,1,2,4,1,0,1,0,0,1,0,0,1,1 },				
	{ 1,0,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,1,1,0,1,1 },				
	{ 1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1 },
	{ 1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,0,1,1 },
	{ 1,0,1,1,0,1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1 },
	{ 1,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,0,1 },
	{ 1,0,0,0,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,1,1 },
	{ 1,1,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1 },
	{ 1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1 },
	{ 1,0,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1 },
	{ 1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1 },
	{ 1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,0,0,0,1 },
	{ 1,0,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,1,0,1 },
	{ 1,1,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1 },
	{ 1,1,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1 },
	{ 1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1 },
	{ 1,1,1,0,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,1,1,1 },
	{ 1,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,1 },
	{ 1,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,0,1,0,1,0,1 },
	{ 1,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,3,0,0,1,1,1 },
	{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 }, };

	//######################################## KEY AND DOOR + LOOP TESTING GAME ########################################
	int loopTest[22][22] =
	{ { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },				
	  { 1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,2,4,0,0,0,1 },				
	  { 1,0,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,1,1,1,0,1 },				
	  { 1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,1 },
	  { 1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,0,1 },
	  { 1,0,1,1,0,1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1 },
	  { 1,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1 },
	  { 1,0,0,0,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,1,1 },
	  { 1,1,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1 },
	  { 1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,1,1,1,1,1 },
	  { 1,0,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1 },
	  { 1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,1 },
	  { 1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,0,0,0,1 },
	  { 1,0,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,1,0,1 },
	  { 1,1,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1 },
	  { 1,1,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1 },
	  { 1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1 },
	  { 1,1,1,0,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,1,1,1 },
 	  { 1,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,1 },
      { 1,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,13,1,13,1,0,1 },
	  { 1,14,1,1,1,1,0,1,1,1,1,0,0,1,1,1,3,0,0,1,1,1 },
	  { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 }, };

	//######################################## VISITED ARRAY ########################################
	bool visted[22][22] = 
	{ { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },				
	  { 1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1 },				
	  { 1,0,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,1,1,1,0,1 },				
	  { 1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,1 },
	  { 1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,0,1 },
	  { 1,0,1,1,0,1,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,1 },
	  { 1,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1 },
	  { 1,0,0,0,1,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,1,1 },
	  { 1,1,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1 },
	  { 1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1 },
	  { 1,0,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1 },
	  { 1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1 },
	  { 1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,1,0,0,0,1 },
	  { 1,0,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,1,0,1 },
	  { 1,1,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1 },
	  { 1,1,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1 },
	  { 1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1 },
	  { 1,1,1,0,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,1,1,1 },
	  { 1,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,1 },
	  { 1,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,0,1,0,1,0,1 },
	  { 1,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1 },
	  { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 }, };

	//Location positions.
	int hor;
	int vert;

	//Constant maze ID's.
	const int emptyID = 0;
	const int wallID = 1;
	const int startID = 2;
	const int finishID = 3;
	const int heroID = 4;
	const int healthID = 11;
	const int swordID = 12;
	const int doorID = 13;
	const int keyID = 14;

private:

	//Private Variables
	int mazeSize; 
};